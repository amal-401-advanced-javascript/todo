{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/header.js","components/todo/todo.js","app.js","index.js"],"names":["TodoForm","props","useState","item","setItem","handleInputChange","e","target","name","value","console","log","Form","onSubmit","preventDefault","reset","handleSubmit","Label","Control","type","placeholder","onChange","Group","controlId","defaultValue","min","max","Button","variant","TodoList","list","handleComplete","ListGroup","className","map","Item","complete","toString","key","_id","onClick","text","assignee","Header","Navbar","bg","Brand","ToDo","todo","setTodo","useEffect","difficulty","Container","Row","Col","filter","length","Math","random","id","i","listItem","App","React","Component","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c9491d67.chunk.js","sourcesContent":["// import React , { useState, useEffect} from 'react';\n// import Form  from 'react-bootstrap/Form';\n// import Button  from 'react-bootstrap/Button';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// function TodoForm(props) {\n\n//   const [item, setItem] = useState({});\n\n//   handleInputChange = e => {\n//     setItem({ ...item,[e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     e.target.reset();  \n//     props.handleSubmit(item);\n//     const item_one = {};\n//     setItem(item_one);\n//   };\n\n//     return (\n\n//         <>\n//           <h3>Add To Do Item</h3>\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Label>To Do Item\n//                 <Form.Control name=\"text\" type=\"text\" placeholder=\"Item Details\" onChange={handleInputChange} /></Form.Label>\n//             <Form.Group controlId=\"formBasicRange\">\n//               <Form.Label>Difficulty Rating\n//               <Form.Control type=\"range\" defaultValue=\"1\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} /></Form.Label>\n//             </Form.Group>\n//             <Form.Label>Assigned To\n//                 <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} /></Form.Label>\n//             <Button variant=\"primary\" type=\"submit\">\n//               Add Item\n//               </Button>\n    \n//           </Form>\n    \n//         </>\n//       );\n    \n//     }\n    \n    \n\n// export default TodoForm;\nimport React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction TodoForm(props) {\n  const [item, setItem] = useState({});\n  const handleInputChange = e => {\n    setItem({ ...item, [e.target.name]: e.target.value });\n    console.log('item in change', item)\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(item);\n    console.log('item in submit', item)\n    const item1 = {};\n    setItem(item1);\n  };\n  return (\n    <>\n      <h3>Add To Do Item</h3>\n      <Form onSubmit={handleSubmit}>\n        <Form.Label>To Do Item\n            <Form.Control name=\"text\" type=\"text\" placeholder=\"Item Details\" onChange={handleInputChange} /></Form.Label>\n        <Form.Group controlId=\"formBasicRange\">\n          <Form.Label>Difficulty Rating\n          <Form.Control type=\"range\" defaultValue=\"1\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} /></Form.Label>\n        </Form.Group>\n        <Form.Label>Assigned To\n            <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} /></Form.Label>\n        <Button variant=\"primary\" type=\"submit\">\n          Add Item\n          </Button>\n      </Form>\n    </>\n  );\n}\nexport default TodoForm;","import React , { useState, useEffect} from 'react';\nimport ListGroup  from 'react-bootstrap/ListGroup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction TodoList ({list,handleComplete}){\n    return (\n      <ListGroup className=\"ul\">\n        {list.map(item => (\n          <ListGroup.Item\n            className={`complete-${item.complete.toString()} li`}\n            key={item._id}\n          >\n            <span onClick={() => handleComplete(item._id)}>\n              {item.text} By {item.assignee}\n            </span>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    );\n  }\n\n\nexport default TodoList;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Header(){\n\n  return (\n      <header>\n           <Navbar bg=\"primary\" variant=\"dark\">\n                    <Navbar.Brand >Home</Navbar.Brand>\n                </Navbar>\n      </header>\n\n  );\n}\n\n\n\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport Header from './header.js';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './todo.scss';\nfunction ToDo() {\n  const [todo, setTodo] = useState([]);\n  useEffect(() => {\n    let list = [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\n    ];\n    setTodo(list);\n  }, []);\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setTodo([...todo, item]);\n  };\n  const toggleComplete = id => {\n    let item = todo.filter(i => i._id === id)[0] || {};\n    if (item._id) {\n      item.complete = !item.complete;\n      let list = todo.map(listItem => listItem._id === item._id ? item : listItem);\n      setTodo(list);\n    }\n  };\n  return (\n    <>\n      <header>\n        <Header />\n      </header>\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col><h2>\n          To Do List Manager ({todo.filter(item => !item.complete).length})\n        </h2></Col>\n        </Row>\n        <Row className=\"todo\">\n          <Col> \n           <div>\n          <TodoForm handleSubmit={addItem} />\n        </div></Col>\n          <Col >\n          <div>\n          <TodoList\n            list={todo}\n            handleComplete={toggleComplete}\n          />\n        </div>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n\nexport default ToDo;","import React from 'react';\n\nimport ToDo from './components/todo/todo.js';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <ToDo />\n      </>\n    );\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}